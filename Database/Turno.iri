procedure pPostTurnos(entidad : TypMantGenerico);
sql : string;
conexion : integer;
sResultado : SysCode;
id : integer;
l_Nombretabla:string:="Turnos";
begin
    id := fGetNextId(l_Nombretabla,CONST_MAX_DB_TURNO);
    sql := "Insert into Turnos (Id, Codigo, Nombre) values (";
    sql := sql + IntegerToString(id, 0) + ",";
    sql := sql + "'"+ entidad.Codigo + "', ";
    sql := sql + "'" +entidad.Nombre + "')";
    
    sResultado := DbExec(sql, conexion);
    if (sResultado <> SysOk) then
        pLoggerDB("pPostTurnos",DBErrMsg);
        return;
    end if;
    --pMostrarYLimpiar("Se agrego correctamente");
end;

procedure pPutTurnos(entidad : TypMantGenerico);
sql : string;
conexion : integer;
sResultado : SysCode;

begin
	sql:="Update Turnos set ";
	sql:=sql + "codigo='" + entidad.Codigo+ "',";
	sql:=sql + "nombre='" + entidad.Nombre + "' ";
    sql:=sql + " where id="+IntegerToString(g_IdItemActual,0);
			
	sResultado := DbExec(sql, conexion);
	if (sResultado <> SysOk) then
		pLoggerDB("pPutTurnos",DBErrMsg);
		return;
	end if;

end;

function fGetTurnoByCodigo(Codigo : string) : TypTurnos;
sql : string;
conexion : integer;
sResultado : SysCode;
Turnos : TypTurnos;
begin
    sql:="select * from Turnos where Codigo='"+Codigo+"' limit 1";
    sResultado := DbExec(sql, conexion);
    --Primero verificamos que la consulta sea diferente de OK. Esto es error
    if(sResultado<>SysOk) then 
        pLoggerDB("fGetTurnoByCodigo",DBErrMsg);
        return Turnos;
    end if;
    
    -- Luego verificamos que la conexión sea = 0. Eso quiere decir que no hay datos para recuperar
    if (conexion=0) then
        return Turnos;
    end if;

    -- Caso contrario, tomamos los datos y los leemos.
    DbColumnInt(conexion, 1, Turnos.Id); 
    DbColumnString(conexion, 2, Turnos.Codigo); 
    DbColumnString(conexion, 3, Turnos.Nombre);  
    
    sResultado := DbNext(conexion);  
    DbFinalize(conexion);
    pMostrarYLimpiar("Se obtuvo correctamente");
    return Turnos;
end;


function fGetTurno(Id : integer) : TypTurnos;
sql : string;
conexion : integer;
sResultado : SysCode;
Turno : TypTurnos;
begin
    sql:="select * from turnos where id = ";
    sql:=sql + IntegerToString(Id, 0);

    sResultado := DbExec(sql, conexion);
    --Primero verificamos que la consulta sea diferente de OK. Esto es error
    if(sResultado<>SysOk) then 
        pLoggerDB("fGetTurno",DBErrMsg);
        return Turno;
    end if;
    
    -- Luego verificamos que la conexión sea = 0. Eso quiere decir que no hay datos para recuperar
    if (conexion=0) then
        return Turno;
    end if;

    -- Caso contrario, tomamos los datos y los leemos.
    DbColumnInt(conexion, 1, Turno.Id); 
    DbColumnString(conexion, 2, Turno.Codigo); 
    DbColumnString(conexion, 3, Turno.Nombre);  
    sResultado := DbNext(conexion);  
    DbFinalize(conexion);
    pMostrarYLimpiar("Se obtuvo correctamente");
    return Turno;
end;


function fListaTurnos : TypArrayTurnos;
sql : string;
conexion : integer;
sResultado : SysCode;
listado : TypArrayTurnos;
indice : integer;
begin
    sql := "select * from Turnos limit "+IntegerToString(g_ItemsPorPagina,0);
    sql :=sql + " Offset "+IntegerToString(g_PaginaActual - 1, 0);

    sResultado := DbExec(sql, conexion);
    --Primero verificamos que la consulta sea diferente de OK. Esto es error
    if(sResultado<>SysOk) then 
        pLoggerDB("fListaTurnos",DBErrMsg);
        return listado;
    end if;
    
    -- Luego verificamos que la conexión sea = 0. Eso quiere decir que no hay datos para recuperar
    if (conexion=0) then
        return listado;
    end if;

    -- Caso contrario, tomamos los datos y los leemos.

    indice := 0;
    while sResultado = SysOk 
    loop
        indice := indice +1;
        DbColumnInt(conexion,1,listado[indice].Id); 
        DbColumnString(conexion,2,listado[indice].Codigo); 
        DbColumnString(conexion,3,listado[indice].Nombre);
        sResultado := DbNext(conexion);  
    end loop;

    DbFinalize(conexion);
    --pMostrarYLimpiar("Se listo correctamente");

    return listado;
end;