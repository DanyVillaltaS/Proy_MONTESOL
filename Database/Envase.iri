procedure pPostEnvase(entidad : TypMantGenerico);
sql : string;
conexion : integer;
sResultado : SysCode;
id : integer;
l_Nombretabla:string:="Envase";
begin
    id := fGetNextId(l_Nombretabla,CONST_MAX_DB_ENVASE);
    sql := "Insert into Envase (Id, Codigo, Nombre, CorteGru, CorteFno, Objetivo, Tara) values (";
    sql := sql + IntegerToString(id, 0) + ",";
    sql := sql + "'"+ entidad.Codigo + "', ";
    sql := sql + "'" +entidad.Nombre + "',";
    sql := sql + RealToString(entidad.CorteGrueso,4,2) + ",";
    sql := sql + RealToString(entidad.CorteFino,4,2) + ",";
    sql := sql + RealToString(entidad.Objetivo,4,2) + ",";
    sql := sql + RealToString(entidad.Tara,4,2) + ")";

    sResultado := DbExec(sql, conexion);
    if (sResultado <> SysOk) then
        pLoggerDB("pPostEnvase",DBErrMsg);
        return;
    end if;
    pMostrarYLimpiar("Se agrego el envase correctamente");
end;

procedure pPutEnvase(entidad : TypMantGenerico);
sql : string;
conexion : integer;
sResultado : SysCode;

begin
	sql:="Update Envase set ";
	sql:=sql + "Codigo='" + entidad.Codigo+ "',";
	sql:=sql + "Nombre='" + entidad.Nombre + "', ";
    sql:=sql + "CorteGru="+RealToString(entidad.CorteGrueso,4,2) + ",";
    sql:=sql + "CorteFno="+RealToString(entidad.CorteFino,4,2) + ",";
    sql:=sql + "Objetivo="+RealToString(entidad.Objetivo,0,2) + ", ";
    sql:=sql + "Tara="+RealToString(entidad.Tara,0,2) + " ";
	sql:=sql + "where id="+IntegerToString(g_IdItemActual,0);
			
	sResultado := DbExec(sql, conexion);
	if (sResultado <> SysOk) then
		pLoggerDB("pPutEnvase",DBErrMsg);
		return;
	end if;
end;


function fGetEnvaseByCodigo(Codigo : string) : TypEnvase;
sql : string;
conexion : integer;
sResultado : SysCode;
l_Envase : TypEnvase;
begin
    sql:="select * from envase where Codigo='"+Codigo+"' limit 1";
    sResultado := DbExec(sql, conexion);
    --Primero verificamos que la consulta sea diferente de OK. Esto es error
    if(sResultado<>SysOk) then 
        pLoggerDB("fGetEnvaseByCodigo",DBErrMsg);
        return l_Envase;
    end if;
    
    -- Luego verificamos que la conexión sea = 0. Eso quiere decir que no hay datos para recuperar
    if (conexion=0) then
        return l_Envase;
    end if;
    
    -- Caso contrario, tomamos los datos y los leemos.
    DbColumnInt(conexion, 1, l_Envase.Id);
    DbColumnString(conexion, 2, l_Envase.Codigo);
    DbColumnString(conexion, 3, l_Envase.Nombre);
    DbColumnReal(conexion,4,l_Envase.CorteGrueso);
    DbColumnReal(conexion,5, l_Envase.CorteFino);
    DbColumnReal(conexion,6, l_Envase.Objetivo);
    DbColumnReal(conexion,7, l_Envase.Tara);
    sResultado := DbNext(conexion);  
    DbFinalize(conexion);
    pMostrarYLimpiar("Se obtuvo correctamente");
    return l_Envase;
end;


function fGetEnvase(Id : integer) : TypEnvase;
sql : string;
conexion : integer;
sResultado : SysCode;
l_Envase : TypEnvase;
begin
    sql:="select * from envase where id = ";
    sql:=sql + IntegerToString(Id, 0);

    sResultado := DbExec(sql, conexion);
    --Primero verificamos que la consulta sea diferente de OK. Esto es error
    if(sResultado<>SysOk) then 
        pLoggerDB("fGetEnvase",DBErrMsg);
        return l_Envase;
    end if;
    
    -- Luego verificamos que la conexión sea = 0. Eso quiere decir que no hay datos para recuperar
    if (conexion=0) then
        return l_Envase;
    end if;

    -- Caso contrario, tomamos los datos y los leemos.
    DbColumnInt(conexion, 1, l_Envase.Id); 
    DbColumnString(conexion, 2, l_Envase.Codigo); 
    DbColumnString(conexion, 3, l_Envase.Nombre);  
    DbColumnReal(conexion,4,l_Envase.CorteGrueso);
    DbColumnReal(conexion,5,l_Envase.CorteFino);
    DbColumnReal(conexion,6,l_envase.Objetivo);
    DbColumnReal(conexion,7,l_envase.Tara);
    sResultado := DbNext(conexion);  
    DbFinalize(conexion);
    pMostrarYLimpiar("Se obtuvo correctamente");
    return l_Envase;
end;


function fListaEnvase : TypArrayEnvases;
sql : string;
conexion : integer;
sResultado : SysCode;
listado : TypArrayEnvases;
indice : integer;
begin
    sql := "select * from Envase limit "+IntegerToString(g_ItemsPorPagina,0);
    sql :=sql + " Offset "+IntegerToString(g_PaginaActual - 1, 0);

    sResultado := DbExec(sql, conexion);
    --Primero verificamos que la consulta sea diferente de OK. Esto es error
    if(sResultado<>SysOk) then 
        pLoggerDB("fListaEnvase",DBErrMsg);
        return listado;
    end if;
    
    -- Luego verificamos que la conexión sea = 0. Eso quiere decir que no hay datos para recuperar
    if (conexion=0) then
        return listado;
    end if;

    -- Caso contrario, tomamos los datos y los leemos.

    indice := 0;
    while sResultado = SysOk 
    loop
        indice := indice +1;
        DbColumnInt(conexion,1,listado[indice].Id); 
        DbColumnString(conexion,2,listado[indice].Codigo); 
        DbColumnString(conexion,3,listado[indice].Nombre);
        DbColumnReal(conexion,4,listado[indice].CorteGrueso);
        DbColumnReal(conexion,5,listado[indice].CorteFino);
        DbColumnReal(conexion,6,listado[indice].Objetivo);
        DbColumnReal(conexion,7,listado[indice].Tara);
        sResultado := DbNext(conexion);  
    end loop;

    DbFinalize(conexion);
    pMostrarYLimpiar("Se listo correctamente");

    return listado;
end;