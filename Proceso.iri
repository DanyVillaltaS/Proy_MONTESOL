procedure IniciarProceso(numBal : integer);
infoBalanza : TypInfo;
infoEnvase : TypEnvase;
pGrueso : real;
pFino : real;
begin
    if (g_ProcesoPesaje[numBal] = 1) then
        pMostrarYLimpiar("Balanza ya iniciada");
        return;
    end if;

    infoBalanza := fGetInfoByIdBalanza(numBal);
    if (infoBalanza.idEnvase = 0 or infoBalanza.idTurno = 0 or infoBalanza.Lote = "") then
        pMostrarYLimpiar("Debe llenar datos para iniciar");
        return;
    end if;

    infoEnvase := fGetEnvase(infoBalanza.idEnvase);
    pGrueso:= infoEnvase.Objetivo * (infoEnvase.CorteGrueso / 100);
    pFino:= infoEnvase.Objetivo * (infoEnvase.CorteFino / 100);
    g_ProcesoPesaje[numBal]:=1;
    if (numBal = CONST_ID_BALANZA_01) then
        -- DisplayStatus("Balanza 1 - g:" +realtostring(infoEnvase.CorteGrueso,0,2) + "f: " + realtostring(infoEnvase.CorteFino,0,2));
        -- ProgramDelay(400);
        SetSPValue(1, pGrueso);
        SetSPValue(2, pFino);
        SetDigOut(0, 1, 1);
        SetDigOut(0, 2, 1);
        EnableSP(1);
        DisableSP(2);
        SetWidgetVisibility(sym74, Voff);
    elsif (numBal = CONST_ID_BALANZA_02) then
        -- DisplayStatus("Balanza 2 - g:" +realtostring(infoEnvase.CorteGrueso,0,2) + "f: " + realtostring(infoEnvase.CorteFino,0,2));
        -- ProgramDelay(400);
        SetSPValue(3, pGrueso);
        SetSPValue(4, pFino);
        SetDigOut(0, 5, 1);
        SetDigOut(0, 6, 1);
        EnableSP(3);
        DisableSP(4);
        SetWidgetVisibility(sym75, Voff);
    end if;
    pMostrarYLimpiar("Balanza " + IntegerToString(numBal,0) + " iniciada");
end;

procedure DetenerProceso(numBal : integer);
begin
    if (g_ProcesoPesaje[numBal] = 0) then
        pMostrarYLimpiar("Balanza " + IntegerToString(numBal,0) + " sin proceso");
        return;
    end if;
    
    if (numBal = CONST_ID_BALANZA_01) then
        DisableSP(1);
        DisableSP(2);
        StopTimer(2);
        SetDigOut(0, 1, 0);
        SetDigOut(0, 2, 0);
        SetWidgetVisibility(sym74, Von);
    elsif (numBal = CONST_ID_BALANZA_02) then
        DisableSP(3);
        DisableSP(4);
        StopTimer(3);
        SetDigOut(0, 5, 0);
        SetDigOut(0, 6, 0);
        SetWidgetVisibility(sym75, Von);
    end if;
    g_ProcesoPesaje[numBal]:=0;
    pMostrarYLimpiar("Balanza " + IntegerToString(numBal,0) + " detenida");
end;

procedure pGuardarPeso(numBal : integer);
infoBalanza : TypInfo;
t_pesaje : TypPesaje;
begin
    infoBalanza:= fGetInfoByIdBalanza(numBal);
    if (infoBalanza.idEnvase = 0 or infoBalanza.idTurno = 0 or infoBalanza.Lote = "") then
        pMostrarYLimpiar("Debe llenar todos los datos para guardar");
        return;
    end if;

    t_pesaje.IdBalanza:=numBal;
    t_pesaje.IdEnvase:=infoBalanza.IdEnvase;
    t_pesaje.IdTurno:=infoBalanza.IdTurno;
    t_pesaje.Lote:=infoBalanza.Lote;
    GetGross(numBal,Primary,t_pesaje.Peso);
    t_pesaje.Fecha:=SystemTime;
    pPostPesaje(t_pesaje);

    infoBalanza.Peso := t_pesaje.Peso;
    pPutPesos(infoBalanza);
    DetenerProceso(numBal);
    pMuestraInfoBalanzas;
end;
